// <auto-generated />
using System;
using AlbumStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlbumStore.Migrations
{
    [DbContext(typeof(AlbumContext))]
    [Migration("20181020193921_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlbumStore.Models.Album", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistID");

                    b.Property<int>("DecadeID");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Year");

                    b.HasKey("ID");

                    b.HasIndex("ArtistID");

                    b.HasIndex("DecadeID");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("AlbumStore.Models.Artist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("GenreID");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("GenreID");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("AlbumStore.Models.Decade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EndYear");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("StartYear");

                    b.HasKey("ID");

                    b.ToTable("Decade");
                });

            modelBuilder.Entity("AlbumStore.Models.Format", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Format");
                });

            modelBuilder.Entity("AlbumStore.Models.Genre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("AlbumStore.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumID");

                    b.Property<int>("FormatID");

                    b.HasKey("ID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("FormatID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("AlbumStore.Models.Album", b =>
                {
                    b.HasOne("AlbumStore.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlbumStore.Models.Decade", "Decade")
                        .WithMany()
                        .HasForeignKey("DecadeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlbumStore.Models.Artist", b =>
                {
                    b.HasOne("AlbumStore.Models.Genre")
                        .WithMany("Artists")
                        .HasForeignKey("GenreID");
                });

            modelBuilder.Entity("AlbumStore.Models.Product", b =>
                {
                    b.HasOne("AlbumStore.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlbumStore.Models.Format", "Format")
                        .WithMany("Products")
                        .HasForeignKey("FormatID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
